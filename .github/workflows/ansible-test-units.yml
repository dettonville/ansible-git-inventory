---
name: Ansible Test Units

on:
  workflow_call:  # allow this workflow to be called from other workflows
  workflow_dispatch:  # allow this workflow to be called from user
  # Schedule run (once daily)
  schedule:
    ## Daily Docker Image Rebuild (10:29am daily)
    - cron: '29 10 * * *'

jobs:
  ansible_test_units:
    name: Perform unit testing
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Ansible Support Matrix
        # https://docs.ansible.com/ansible/latest/reference_appendices/release_and_maintenance.html#ansible-core-support-matrix
        versions:
          # Testing all ansible and python versions is impractical. Only test the newest and
          # oldest versions of each that we support
          - { python: "3.13", ansible: stable-2.19 }
          - { python: "3.11", ansible: stable-2.19 }
          - { python: "3.12", ansible: stable-2.16 }
          - { python: "3.10", ansible: stable-2.16 }
#          - { python: "3.13", ansible: devel }

    steps:
      - name: >-
          Perform unit testing against
          Ansible version ${{ matrix.versions.ansible }}
          under Python ${{ matrix.versions.python }}
        # See the documentation for the following GitHub action on
        # https://github.com/ansible-community/ansible-test-gh-action/blob/main/README.md
        uses: ansible-community/ansible-test-gh-action@release/v1
        with:
          ansible-core-version: ${{ matrix.versions.ansible }}
          target-python-version: ${{ matrix.versions.python }}
          testing-type: units
          test-deps: >-
            dettonville.utils
          pull-request-change-detection: false
          pre-test-cmd: >-
            ansible-test --version

  # This job does nothing and is only used for the branch protection
  # or multi-stage CI jobs, like making sure that all tests pass before
  # a publishing job is started.
  unit-check:
    if: always()
    needs:
      - ansible_test_units
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
